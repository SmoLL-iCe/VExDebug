#pragma once

#include <iostream>


uint8_t shell_code[ ] = {
	//   =>	mov rax,rcx
	0x48, 0x8B, 0xC1,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	sub rsp,40 { 64 }
	0x48, 0x83, 0xEC, 0x40,
	//   =>	call KERNEL32.Sleep
	0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
	//   =>	add rsp,40 { 64 }
	0x48, 0x83, 0xC4, 0x40,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rcx,0000000000000123 { 291 }
	0x48, 0xB9, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	//   =>	sub rsp,40 { 64 }
	0x48, 0x83, 0xEC, 0x40,
	//   =>	call KERNEL32.Sleep
	0xFF, 0x15, 0x02, 0x00, 0x00, 0x00, 0xEB, 0x08, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc,
	//   =>	add rsp,40 { 64 }
	0x48, 0x83, 0xC4, 0x40,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	ret
	0xC3
};

uint8_t shell_code_read[ ] = {
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov eax,[rcx]
	0x8B, 0x01,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	nop
	0x90,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	ret
	0xC3
};



uint8_t shell_code_write[ ] = {
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov [rcx],00000123 { 291 }
	0xC7, 0x01, 0x23, 0x01, 0x00, 0x00,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	nop
	0x90,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	mov rax,rax
	0x48, 0x8B, 0xC0,
	//   =>	nop
	0x90,
	//   =>	ret
	0xC3
};
